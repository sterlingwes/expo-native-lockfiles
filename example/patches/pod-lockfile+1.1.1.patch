diff --git a/node_modules/pod-lockfile/dist/main.js b/node_modules/pod-lockfile/dist/main.js
index a088db7..7d5a980 100644
--- a/node_modules/pod-lockfile/dist/main.js
+++ b/node_modules/pod-lockfile/dist/main.js
@@ -4,6 +4,21 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 const child_process_1 = require("child_process");
+const exec = () => {
+    return (...args) => {
+        console.log(`Running w/ try/catch: execSync with ${args.join(" ")}`)
+        try {
+            const result = (0, child_process_1.execSync)(...args).toString()
+            console.log('exec result:', result)
+            return result
+        } catch (e) {
+            console.log('exec error:', e)
+            console.log('exec stdout:', e.stdout.toString())
+            console.log('exec stderr:', e.stderr.toString())
+            throw e
+        }
+    }
+}
 const fs_1 = require("fs");
 const path_1 = require("path");
 const package_json_1 = __importDefault(require("../package.json"));
@@ -56,7 +71,7 @@ if (flags["version"]) {
 }
 const podVersion = flags["pod-version"];
 const requiresPodVersion = typeof podVersion === "string";
-const installedGems = (0, child_process_1.execSync)("gem list --local").toString();
+const installedGems = exec()("gem list --local").toString();
 const podInstalled = installedGems.split(/\r?\n/).find((gem) => {
     return gem.trim().startsWith("cocoapods (");
 });
@@ -69,7 +84,7 @@ if (!podInstalled) {
     console.log(requiresPodVersion
         ? `Installing cocoapods w/ required version ${podVersion}`
         : "Installing cocoapods");
-    (0, child_process_1.execSync)(requiresPodVersion
+    exec()(requiresPodVersion
         ? `gem install cocoapods -v ${podVersion}`
         : "gem install cocoapods");
 }
@@ -78,7 +93,7 @@ const pluginInstalled = installedGems.split(/\r?\n/).find((gem) => {
 });
 if (!pluginInstalled) {
     console.log("Installing cocoapods-lockfile plugin");
-    (0, child_process_1.execSync)("gem install cocoapods-lockfile");
+    exec()("gem install cocoapods-lockfile");
 }
 const path = (0, path_1.resolve)(flags["project"] ?? process.cwd());
 const podfileExists = (0, fs_1.existsSync)((0, path_1.resolve)(path, "Podfile"));
@@ -88,7 +103,7 @@ if (!podfileExists) {
 }
 console.log("Generating lockfile for project");
 try {
-    (0, child_process_1.execSync)("pod install --lockfile-only", { cwd: path });
+    exec()("pod install --lockfile-only", { cwd: path });
     console.log("\nPodfile.lock generated successfully! No dependencies were installed in the making of this lockfile.\n");
 }
 catch (e) {
